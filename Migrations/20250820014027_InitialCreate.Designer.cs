// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsersTeachers.Data;

#nullable disable

namespace UsersTeachers.Migrations
{
    [DbContext(typeof(UsersTeachersDbContext))]
    [Migration("20250820014027_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("STUDENTS_COURSES", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("STUDENTS_COURSES");
                });

            modelBuilder.Entity("UsersTeachers.Data.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TEACHER_ID");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("COURSES", (string)null);
                });

            modelBuilder.Entity("UsersTeachers.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Institution")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("INSTITUTION");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("STUDENTS", (string)null);
                });

            modelBuilder.Entity("UsersTeachers.Data.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Institution")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("INSTITUTION");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("TEACHERS", (string)null);
                });

            modelBuilder.Entity("UsersTeachers.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Password")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USER_ROLE");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Lastname" }, "IX_LASTNAME");

                    b.HasIndex(new[] { "Email" }, "UQ_EMAIL")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ_USERNAME")
                        .IsUnique();

                    b.ToTable("USERS", (string)null);
                });

            modelBuilder.Entity("STUDENTS_COURSES", b =>
                {
                    b.HasOne("UsersTeachers.Data.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersTeachers.Data.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsersTeachers.Data.Course", b =>
                {
                    b.HasOne("UsersTeachers.Data.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TEACHERS_COURSES");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UsersTeachers.Data.Student", b =>
                {
                    b.HasOne("UsersTeachers.Data.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("UsersTeachers.Data.Student", "UserId")
                        .HasConstraintName("FK_STUDENTS_USERS");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UsersTeachers.Data.Teacher", b =>
                {
                    b.HasOne("UsersTeachers.Data.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("UsersTeachers.Data.Teacher", "UserId")
                        .HasConstraintName("FK_TEACHERS_USERS");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UsersTeachers.Data.Teacher", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UsersTeachers.Data.User", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
